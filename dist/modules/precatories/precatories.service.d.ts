import { Prisma } from '@prisma/client';
import { DatabaseService } from '../database/database.service';
import { PrecatoryEntity } from './entities';
import { PageDto } from 'src/shared/@types';
export declare class PrecatoriesService {
    private readonly db;
    constructor(db: DatabaseService);
    create(createArgs: Prisma.PrecatorioCreateArgs): Promise<{
        id: string;
        escritorio_id: string;
        createdAt: Date;
        updatedAt: Date;
        status: number;
        cliente_id: string;
        data_levantamento: Date;
        valor_bruto: Prisma.Decimal;
        valor_irrf_retido: Prisma.Decimal;
        valor_restituicao: Prisma.Decimal;
        rra_meses: number;
        tribunal_pagador: string;
        tipo_verba: import(".prisma/client").$Enums.TipoVerba;
        honorarios_destacados: import(".prisma/client").$Enums.HonorariosDestacados;
        percentual_honorario: Prisma.Decimal;
        valor_honorario: Prisma.Decimal;
        processo_origem: string;
        oficio_pdf: string;
        comprovante_pdf: string;
        usuario_id: string;
        contador: number;
    }>;
    findAll(query: Partial<PrecatoryEntity>, page: PageDto): Promise<[number, ({
        cliente: {
            id: string;
            nome: string;
            cpf: string;
            data_nascimento: Date;
            createdAt: Date;
            updatedAt: Date;
            doenca_grave: boolean;
            laudo_doenca: string;
            hipossuficiente: boolean;
            doenca: string;
        };
    } & {
        id: string;
        escritorio_id: string;
        createdAt: Date;
        updatedAt: Date;
        status: number;
        cliente_id: string;
        data_levantamento: Date;
        valor_bruto: Prisma.Decimal;
        valor_irrf_retido: Prisma.Decimal;
        valor_restituicao: Prisma.Decimal;
        rra_meses: number;
        tribunal_pagador: string;
        tipo_verba: import(".prisma/client").$Enums.TipoVerba;
        honorarios_destacados: import(".prisma/client").$Enums.HonorariosDestacados;
        percentual_honorario: Prisma.Decimal;
        valor_honorario: Prisma.Decimal;
        processo_origem: string;
        oficio_pdf: string;
        comprovante_pdf: string;
        usuario_id: string;
        contador: number;
    })[]]>;
    findFirst(args: Prisma.PrecatorioFindFirstArgs): Promise<{
        id: string;
        escritorio_id: string;
        createdAt: Date;
        updatedAt: Date;
        status: number;
        cliente_id: string;
        data_levantamento: Date;
        valor_bruto: Prisma.Decimal;
        valor_irrf_retido: Prisma.Decimal;
        valor_restituicao: Prisma.Decimal;
        rra_meses: number;
        tribunal_pagador: string;
        tipo_verba: import(".prisma/client").$Enums.TipoVerba;
        honorarios_destacados: import(".prisma/client").$Enums.HonorariosDestacados;
        percentual_honorario: Prisma.Decimal;
        valor_honorario: Prisma.Decimal;
        processo_origem: string;
        oficio_pdf: string;
        comprovante_pdf: string;
        usuario_id: string;
        contador: number;
    }>;
    findUnique(args: Prisma.PrecatorioFindUniqueArgs): Promise<{
        id: string;
        escritorio_id: string;
        createdAt: Date;
        updatedAt: Date;
        status: number;
        cliente_id: string;
        data_levantamento: Date;
        valor_bruto: Prisma.Decimal;
        valor_irrf_retido: Prisma.Decimal;
        valor_restituicao: Prisma.Decimal;
        rra_meses: number;
        tribunal_pagador: string;
        tipo_verba: import(".prisma/client").$Enums.TipoVerba;
        honorarios_destacados: import(".prisma/client").$Enums.HonorariosDestacados;
        percentual_honorario: Prisma.Decimal;
        valor_honorario: Prisma.Decimal;
        processo_origem: string;
        oficio_pdf: string;
        comprovante_pdf: string;
        usuario_id: string;
        contador: number;
    }>;
    update(updatePrecatorioDto: Prisma.PrecatorioUpdateArgs): Promise<{
        id: string;
        escritorio_id: string;
        createdAt: Date;
        updatedAt: Date;
        status: number;
        cliente_id: string;
        data_levantamento: Date;
        valor_bruto: Prisma.Decimal;
        valor_irrf_retido: Prisma.Decimal;
        valor_restituicao: Prisma.Decimal;
        rra_meses: number;
        tribunal_pagador: string;
        tipo_verba: import(".prisma/client").$Enums.TipoVerba;
        honorarios_destacados: import(".prisma/client").$Enums.HonorariosDestacados;
        percentual_honorario: Prisma.Decimal;
        valor_honorario: Prisma.Decimal;
        processo_origem: string;
        oficio_pdf: string;
        comprovante_pdf: string;
        usuario_id: string;
        contador: number;
    }>;
    delete(id: string): Promise<{
        message: string;
    }>;
}
